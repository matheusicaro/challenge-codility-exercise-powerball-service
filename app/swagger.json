{
  "swagger": "2.0",
  "info": {
    "description": "Rest API for Codility challenge.",
    "version": "1.0.0",
    "title": "codility-exercise-powerball-service",
    "contact": { "email": "contact@matheusicaro.com" },
    "license": { "name": "MIT", "url": "https://github.com/matheusicaro/coderbyte-full-stack-project/blob/master/LICENSE" }
  },
  "host": "*",
  "basePath": "/api/v1",
  "tags": [],
  "schemes": ["https", "http"],

  "paths": {
    "/health": {
      "get": {
        "tags": ["helth"],
        "summary": "check the Api status",
        "description": "",
        "operationId": "getHealth",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": { "status": "ONLINE", "schema": { "$ref": "#/definitions/HealthStatus" } }
        }
      }
    },

    "/powerball/check/result": {
      "post": {
        "tags": ["powerballCheckResult"],
        "summary": "Returns award ticket for each pick list entered",
        "description": "Accept data for a lottery ticket, and respond with whether each pick has won, the prize won per-pick, and the total of all prizes won on the ticket. For doubts, the documentation of the resource below can be accessed at: https://github.com/matheusicaro/codility-exercise-powerball-service",
        "operationId": "checkPicks",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Object required to check the picks and validate that each pick won",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LotteryTicket"
            }
          }
        ],
        "responses": {
          "200": { "description": "Successful operation", "schema": { "$ref": "#/definitions/ResultLotteryTicket" } },
          "400": {
            "description": "Invalid parameters - Message for invalid input parameters",
            "schema": { "$ref": "#/definitions/ApiResponse" }
          },
          "404": {
            "description": "Not found data - Message for data not found for the input or route informed",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "500": {
            "description": "Internal error - Message for request processing failure for undetectable generic errors",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    }
  },

  "definitions": {
    "HealthStatus": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "example": "2021-10-31T00:00:00Z"
        },
        "status": {
          "type": "string",
          "enum": ["ONLINE", "FAILED"]
        }
      }
    },

    "LotteryTicket": {
      "type": "object",
      "properties": {
        "draw_date": {
          "type": "string",
          "example": "2021-10-30",
          "description": "Date of the desired draw for analysis of picks"
        },
        "picks": {
          "type": "array",
          "description": "List of picks to be analyzed",
          "items": {
            "type": "string",
            "example": "05 23 28 43 56 19",
            "description": "Pick to be analyzed with the results of the draw. For the pick, the total of 6 numbers in number pair format must be respected for numbers less than 10 and all separated by space."
          }
        }
      }
    },

    "ResultLotteryTicket": {
      "type": "object",
      "properties": {
        "draw_date": {
          "type": "string",
          "example": "2021-10-31",
          "description": "Draw date informed for analysis"
        },
        "winning_numbers": {
          "type": "string",
          "example": "05 23 28 43 56 19",
          "description": "Powerball official result for the informed draw date"
        },
        "total_won": {
          "type": "object",
          "description": "Total amounts won in prizes for the set of picks reported",
          "properties": {
            "value": {
              "type": "number",
              "format": "double",
              "example": "100090",
              "description": "Earned total as a number in double format"
            },
            "value_formatted": {
              "type": "string",
              "example": "$1,000,90",
              "description": "Earned total formatted in US dollar currency"
            }
          }
        },
        "picks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "pick": {
                "type": "string",
                "example": "05 23 28 43 56 19",
                "description": "Pick informed for analysis"
              },
              "result": {
                "type": "object",
                "properties": {
                  "won": {
                    "type": "boollean",
                    "example": true,
                    "description": "Result if the tick is awarded or not"
                  },
                  "value": {
                    "type": "number",
                    "format": "double",
                    "example": "100090",
                    "description": "Earned total as a number in double format"
                  },
                  "value_formatted": {
                    "type": "string",
                    "example": "$1,000,90",
                    "description": "Earned total formatted in US dollar currency"
                  }
                }
              }
            }
          }
        }
      }
    },

    "ApiResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "message for error description or detailed API response",
          "description": "Informational message with details of the request processing failure"
        }
      }
    }
  },

  "externalDocs": { "description": "Find out more about Swagger", "url": "http://swagger.io" }
}
